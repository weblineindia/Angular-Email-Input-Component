{"version":3,"file":"angular-weblineindia-email.js","sources":["../../../projects/email/src/lib/email.service.ts","../../../projects/email/src/lib/email.component.ts","../../../projects/email/src/lib/email.module.ts","../../../projects/email/src/public-api.ts","../../../projects/email/src/angular-weblineindia-email.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor() { }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'lib-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent {\n  faPlus: any = faPlus;\n  faMinus: any = faMinus;\n\n  @Input() maxlength: Number = 50;\n  @Input() emailFormateError: String = 'Email is not valid';\n  @Input() duplicateEmailError: String = 'Do not enter same email';\n  @Input() name: String = '';\n  @Input() emailArray: any;\n  @Input() id: String = '';\n  @Input() disabled: Boolean = false;\n  @Input() value: String = '';\n  @Input() isMultiple: Boolean = true;\n  @Input() placeholder: String = 'Email';\n  @Input() isShowPlus: Boolean = false;\n  @Input() tabindex: Number = 0;\n  @Input() index: Number = 0;\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onPlus: EventEmitter<any> = new EventEmitter<any>();\n\n  onChange(event, index) {\n    let data = { event: event, index: index };\n    this.change.emit(data);\n  }\n\n  isError: Boolean = false;\n  isUniqueError: Boolean = false;\n\n  onBlur(event, id, emailArray) {\n    debugger;\n    if (event.target.value !== '') {\n      const validEmailRegex = /[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}/;\n      if (!validEmailRegex.test(event.target.value)) {\n        this.isError = true;\n      } else {\n        this.isError = false;\n        emailArray.map((item, index) => {\n          if (index !== id) {\n            if (item.email === event.target.value) {\n              this.isUniqueError = true;\n            } else {\n              this.isUniqueError = false;\n            }\n          }\n        });\n      }\n    }\n    this.blur.emit(event);\n  }\n  onFocus(event, index) {\n    this.focus.emit(event);\n  }\n  onPlusClick() {\n    this.onPlus.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EmailComponent } from './email.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [EmailComponent],\n  imports: [\n    FontAwesomeModule,\n    FormsModule,                               \n    ReactiveFormsModule ,\n    CommonModule\n  ],\n  exports: [EmailComponent]\n})\nexport class EmailModule { }\n","/*\n * Public API Surface of email\n */\n\nexport * from './lib/email.service';\nexport * from './lib/email.component';\nexport * from './lib/email.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}