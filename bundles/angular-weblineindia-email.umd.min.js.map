{"version":3,"sources":["../../../projects/email/src/lib/email.service.ts","../../../projects/email/src/lib/email.component.html","../../../projects/email/src/lib/email.component.ts","../../../projects/email/src/lib/email.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵtemplate","EmailService","factory","ɵfac","providedIn","i0.ɵɵtext","i0.ɵɵtextInterpolate","EmailComponent","this","faPlus","faMinus","maxlength","emailFormateError","duplicateEmailError","name","id","disabled","value","isMultiple","placeholder","isShowPlus","tabindex","index","focus","EventEmitter","blur","change","onPlus","isError","isUniqueError","prototype","onChange","event","data","emit","onBlur","emailArray","_this","target","test","map","item","email","onFocus","onPlusClick","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","$event","i0","ɵɵpureFunction0","_c1","EmailModule","imports","FontAwesomeModule","FormsModule","ReactiveFormsModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor() { }\n}\n","<div class=\"list-view\">\n  <div>\n    <input\n      [id]=\"id\"\n      [value]=\"value\"\n      [disabled]=\"disabled\"\n      type=\"email\"\n      [placeholder]=\"placeholder\"\n      [tabindex]=\"tabindex\"\n      autocomplete=\"off\"\n      [maxLength]=\"maxlength\"\n      [name]=\"name\"\n      [ngClass]=\"{\n        input: true,\n        'form-control': true\n      }\"\n      (focus)=\"onFocus($event, index)\"\n      (blur)=\"onBlur($event, index, emailArray)\"\n      (input)=\"onChange($event, index)\"\n    />\n\n    <span *ngIf=\"isMultiple && value !== ''\" class=\"add-remove\">\n      <span>\n        <fa-icon [icon]=\"faMinus\"></fa-icon>\n      </span>\n      <span *ngIf=\"isShowPlus\">\n        <fa-icon [icon]=\"faPlus\" (click)=\"onPlusClick()\"></fa-icon>\n      </span>\n    </span>\n    <p\n      [ngClass]=\"{\n        control: true,\n        'error-msg': isError\n      }\"\n      *ngIf=\"isError\"\n    >\n      <span>{{ emailFormateError }}</span>\n    </p>\n    <p\n      [ngClass]=\"{\n        control: true,\n        'error-msg': isUniqueError\n      }\"\n      *ngIf=\"isUniqueError\"\n    >\n      <span>{{ duplicateEmailError }}</span>\n    </p>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'lib-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent {\n  faPlus: any = faPlus;\n  faMinus: any = faMinus;\n\n  @Input() maxlength: Number = 50;\n  @Input() emailFormateError: String = 'Email is not valid';\n  @Input() duplicateEmailError: String = 'Do not enter same email';\n  @Input() name: String = '';\n  @Input() emailArray: any;\n  @Input() id: String = '';\n  @Input() disabled: Boolean = false;\n  @Input() value: String = '';\n  @Input() isMultiple: Boolean = true;\n  @Input() placeholder: String = 'Email';\n  @Input() isShowPlus: Boolean = false;\n  @Input() tabindex: Number = 0;\n  @Input() index: Number = 0;\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onPlus: EventEmitter<any> = new EventEmitter<any>();\n\n  onChange(event, index) {\n    let data = { event: event, index: index };\n    this.change.emit(data);\n  }\n\n  isError: Boolean = false;\n  isUniqueError: Boolean = false;\n\n  onBlur(event, id, emailArray) {\n    debugger;\n    if (event.target.value !== '') {\n      const validEmailRegex = /[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}/;\n      if (!validEmailRegex.test(event.target.value)) {\n        this.isError = true;\n      } else {\n        this.isError = false;\n        emailArray.map((item, index) => {\n          if (index !== id) {\n            if (item.email === event.target.value) {\n              this.isUniqueError = true;\n            } else {\n              this.isUniqueError = false;\n            }\n          }\n        });\n      }\n    }\n    this.blur.emit(event);\n  }\n  onFocus(event, index) {\n    this.focus.emit(event);\n  }\n  onPlusClick() {\n    this.onPlus.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EmailComponent } from './email.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [EmailComponent],\n  imports: [\n    FontAwesomeModule,\n    FormsModule,                               \n    ReactiveFormsModule ,\n    CommonModule\n  ],\n  exports: [EmailComponent]\n})\nexport class EmailModule { }\n"]}